# Generated by Django 5.0.14 on 2025-04-30 13:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('name_ko', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('full_image_url', models.CharField(blank=True, max_length=200, null=True)),
                ('icon_image_url', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatchVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=20, unique=True)),
                ('release_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('image_url', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AdCarryChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adc_champion', to='lol.champion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JungleChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jungle_champion', to='lol.champion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MidChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mid_champion', to='lol.champion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='support_champion', to='lol.champion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pick_count', models.IntegerField(default=0)),
                ('win_count', models.IntegerField(default=0)),
                ('adc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.adcarrychampion')),
                ('jungle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.junglechampion')),
                ('mid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.midchampion')),
                ('patch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.patchversion')),
                ('support', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.supportchampion')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(unique=True)),
                ('region', models.CharField(max_length=20)),
                ('blue_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blue_team_matches', to='lol.teamcomposition')),
                ('red_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='red_team_matches', to='lol.teamcomposition')),
            ],
        ),
        migrations.CreateModel(
            name='EsportsGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sets', models.IntegerField(default=0)),
                ('patch', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blue_team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='blue_team_matches', to='lol.team')),
                ('red_team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='red_team_matches', to='lol.team')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='winner_matches', to='lol.team')),
                ('blue_composition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='blue_team_matches_esports', to='lol.teamcomposition')),
                ('red_composition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='red_team_matches_esports', to='lol.teamcomposition')),
            ],
        ),
        migrations.CreateModel(
            name='TopChampion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('champion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='top_champion', to='lol.champion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='teamcomposition',
            name='top',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_compositions', to='lol.topchampion'),
        ),
        migrations.CreateModel(
            name='ChampionStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('TOP', 'Top'), ('JUNGLE', 'Jungle'), ('MID', 'Mid'), ('ADC', 'Adc'), ('SUPPORT', 'Support')], max_length=20)),
                ('pick_count', models.IntegerField(default=0)),
                ('win_count', models.IntegerField(default=0)),
                ('champion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion_stats', to='lol.champion')),
                ('patch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion_stats', to='lol.patchversion')),
            ],
            options={
                'unique_together': {('patch', 'champion', 'position')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='teamcomposition',
            unique_together={('patch', 'top', 'jungle', 'mid', 'adc', 'support')},
        ),
    ]
